{"version":3,"sources":["components/Navigation/Drawer/Drawer.css","components/Navigation/MenuToggle/MenuToggle.css","containers/Quiz/Quiz.css","components/ActiveQuiz/ActiveQuiz.css","components/ActiveQuiz/AnswersList/AnswersItem/AnswersItem.css","components/FinishedQuiz/FinishedQuiz.css","components/UI/Button/Button.css","hoc/Layout/Layout.css","components/UI/Backdrop/Backdrop.css","components/ActiveQuiz/AnswersList/AnswersList.css","containers/QuizList/QuizList.css","components/Navigation/MenuToggle/MenuToggle.js","components/UI/Backdrop/Backdrop.js","components/Navigation/Drawer/Drawer.js","hoc/Layout/Layout.js","components/ActiveQuiz/AnswersList/AnswersItem/AnswersItem.js","components/ActiveQuiz/AnswersList/AnswersList.js","components/ActiveQuiz/ActiveQuiz.js","components/UI/Button/Button.js","components/FinishedQuiz/FinishedQuiz.js","containers/Quiz/Quiz.js","containers/QuizList/QuizList.js","containers/Auth/Auth.js","containers/QuizCreator/QuizCreator.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Drawer","close","MenuToggle","open","Quiz","QuizWrapper","ActiveQuiz","Question","AnswersItem","success","error","FinishedQuiz","Button","primary","Layout","Backdrop","AnswersList","QuizList","props","cls","classes","isOpen","push","react_default","a","createElement","className","join","onClick","onToggle","links","to","label","exact","clickHandler","_this","onClose","_this2","this","map","link","index","key","NavLink","activeClassName","active","Fragment","renderLinks","UI_Backdrop_Backdrop","Component","state","menu","toggleMenuHandler","setState","menuCloseHandler","Navigation_Drawer_Drawer","Navigation_MenuToggle_MenuToggle","children","onAnswerClick","answer","id","text","answers","AnswersList_AnswersItem_AnswersItem","answerNumber","question","quizLength","ActiveQuiz_AnswersList_AnswersList","type","disabled","successCount","Object","keys","results","reduce","total","quiz","quizItem","length","UI_Button_Button","onRetry","Link","isFinished","activeQuestion","answerState","rightAnswerId","onAnswerClickHandler","answerId","defineProperty","timeout","window","setTimeout","isQuizFinished","clearTimeout","retryHandler","components_FinishedQuiz_FinishedQuiz","components_ActiveQuiz_ActiveQuiz","renderQuizes","Auth","QuizCreator","App","hoc_Layout_Layout","Switch","Route","path","component","Boolean","location","hostname","match","app","BrowserRouter","src_App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9bcafd34.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Drawer\":\"Drawer__Drawer--l2o1Z\",\"close\":\"Drawer__close--2WTLc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MenuToggle\":\"MenuToggle__MenuToggle--1Ffb2\",\"open\":\"MenuToggle__open--32P8T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Quiz\":\"Quiz__Quiz--1YgKh\",\"QuizWrapper\":\"Quiz__QuizWrapper--3xC_e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ActiveQuiz\":\"ActiveQuiz__ActiveQuiz--2aF-E\",\"Question\":\"ActiveQuiz__Question--1DBQp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswersItem\":\"AnswersItem__AnswersItem--39CQ4\",\"success\":\"AnswersItem__success--8xTrw\",\"error\":\"AnswersItem__error--5sTQY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FinishedQuiz\":\"FinishedQuiz__FinishedQuiz--2KeHu\",\"success\":\"FinishedQuiz__success--2INri\",\"error\":\"FinishedQuiz__error--3HVNl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button__Button--ajevi\",\"error\":\"Button__error--3i2F2\",\"success\":\"Button__success--1wqIA\",\"primary\":\"Button__primary--2Limk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout__Layout--1WKx0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop__Backdrop--eeZpu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswersList\":\"AnswersList__AnswersList--8k9Jp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizList\":\"QuizList__QuizList--1Dlta\"};","import React from 'react'\r\nimport classes from './MenuToggle.css'\r\n\r\nconst MenuToggle = props => {\r\n  const cls = [\r\n    classes.MenuToggle,\r\n    'fa'\r\n  ]\r\n\r\n  if (props.isOpen) {\r\n    cls.push('fa-times')\r\n    cls.push(classes.open)\r\n  } else {\r\n    cls.push('fa-bars')\r\n  }\r\n\r\n  return (\r\n    <i\r\n      className={cls.join(' ')}\r\n      onClick={props.onToggle}\r\n    />\r\n  )\r\n}\r\n\r\nexport default MenuToggle","import React from 'react'\r\nimport classes from './Backdrop.css'\r\n\r\nconst Backdrop = props => <div className={classes.Backdrop} onClick={props.onClick}></div>\r\n\r\nexport default Backdrop","import React, {Component} from 'react'\r\nimport classes from './Drawer.css'\r\nimport {NavLink} from 'react-router-dom'\r\nimport Backdrop from '../../UI/Backdrop/Backdrop'\r\n\r\nconst links = [\r\n  {to: '/', label: 'Список', exact: true},\r\n  {to: '/auth', label: 'Авторизация', exact: false},\r\n  {to: '/quiz-creator', label: 'Создать тест', exact: false}\r\n]\r\n\r\nclass Drawer extends Component {\r\n\r\n  clickHandler = () => {\r\n    this.props.onClose()\r\n  }\r\n\r\n  renderLinks() {\r\n    return links.map((link, index) => {\r\n      return (\r\n        <li key={index}>\r\n          <NavLink\r\n            to={link.to}\r\n            exact={link.exact}\r\n            activeClassName={classes.active}\r\n            onClick={this.clickHandler}\r\n          >\r\n            {link.label}\r\n          </NavLink>\r\n        </li>\r\n      )\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const cls = [classes.Drawer]\r\n\r\n    if (!this.props.isOpen) {\r\n      cls.push(classes.close)\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <nav className={cls.join(' ')}>\r\n          <ul>\r\n            { this.renderLinks() }\r\n          </ul>\r\n        </nav>\r\n        { this.props.isOpen ? <Backdrop onClick={this.props.onClose} /> : null }\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Drawer","import React, {Component} from 'react';\r\nimport classes from './Layout.css';\r\nimport MenuToggle from '../../components/Navigation/MenuToggle/MenuToggle'\r\nimport Drawer from '../../components/Navigation/Drawer/Drawer'\r\n\r\nclass Layout extends Component {\r\n\r\n  state = {\r\n    menu: false\r\n  }\r\n\r\n  toggleMenuHandler = () => {\r\n    this.setState({\r\n      menu: !this.state.menu\r\n    })\r\n  }\r\n  \r\n  menuCloseHandler = () => {\r\n    this.setState({\r\n      menu: false\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={classes.Layout}>\r\n\r\n        <Drawer \r\n          isOpen={this.state.menu}\r\n          onClose={this.menuCloseHandler}  \r\n        />\r\n\r\n        <MenuToggle \r\n          onToggle={this.toggleMenuHandler}\r\n          isOpen={this.state.menu}\r\n        />\r\n\r\n        <main>\r\n          {this.props.children}\r\n        </main>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Layout;","import React from 'react';\r\nimport classes from './AnswersItem.css';\r\n\r\nconst AnswersItem = props => {\r\n  const cls = [classes.AnswersItem]\r\n\r\n  if (props.state) {\r\n    cls.push(classes[props.state])\r\n  }\r\n\r\n  return (\r\n    <li \r\n      className={cls.join(' ')}\r\n      onClick={() => props.onAnswerClick(props.answer.id)}\r\n    >\r\n      { props.answer.text }\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default AnswersItem;","import React from 'react';\r\nimport classes from './AnswersList.css';\r\nimport AnswersItem from './AnswersItem/AnswersItem';\r\n\r\nconst AnswersList = props => (\r\n  <ul className={classes.AnswersList}>\r\n    { props.answers.map((answer, index) => {\r\n      return (\r\n        <AnswersItem\r\n          key={index} \r\n          answer={answer}\r\n          onAnswerClick={props.onAnswerClick}\r\n          state={props.state ? props.state[answer.id] : null}\r\n        />\r\n      )\r\n    }) }\r\n  </ul>\r\n)\r\n\r\nexport default AnswersList;","import React from 'react';\r\nimport classes from './ActiveQuiz.css';\r\nimport AnswersList from './AnswersList/AnswersList';\r\n\r\nconst ActiveQuiz = props => (\r\n  <div className={classes.ActiveQuiz}>\r\n    <p className={classes.Question}>\r\n      <span>\r\n        <strong>{props.answerNumber}.</strong>&nbsp;\r\n         {props.question}\r\n      </span>\r\n\r\n      <small>{props.answerNumber} из { props.quizLength }</small>\r\n    </p>\r\n\r\n    <AnswersList\r\n      state={props.state} \r\n      answers={props.answers}\r\n      onAnswerClick={props.onAnswerClick}\r\n    />\r\n  </div>\r\n)\r\n\r\nexport default ActiveQuiz;","import React from 'react'\r\nimport classes from './Button.css'\r\n\r\nconst Button = props => {\r\n  const cls = [\r\n    classes.Button,\r\n    classes[props.type]\r\n  ]\r\n  return (\r\n    <button\r\n      onClick={props.onClick}\r\n      className={cls.join(' ')}\r\n      disabled={props.disabled}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default Button","import React from 'react'\r\nimport classes from './FinishedQuiz.css'\r\nimport Button from '../UI/Button/Button'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst FinishedQuiz = props => {\r\n  const successCount = Object.keys(props.results).reduce((total, key) => {\r\n    if (props.results[key] === 'success') {\r\n      total++\r\n    }\r\n\r\n    return total\r\n  }, 0)\r\n\r\n\r\n  return (\r\n    <div className={classes.FinishedQuiz}>\r\n      <ul>\r\n        { props.quiz.map((quizItem, index) => {\r\n          const cls = [\r\n            'fa',\r\n            props.results[quizItem.id] === 'error' ? 'fa-times' : 'fa-check',\r\n            classes[props.results[quizItem.id]]\r\n          ]\r\n\r\n          return (\r\n            <li \r\n              key={index}\r\n            >\r\n              <strong>{index + 1}</strong>.&nbsp;\r\n              {quizItem.question}\r\n              <i className={cls.join(' ')} />\r\n            </li>\r\n          )\r\n          \r\n        }) }\r\n      </ul>\r\n\r\n      <p>Правильно {successCount} из {props.quiz.length}</p>\r\n\r\n      <div>\r\n        <Button onClick={props.onRetry} type=\"primary\">Повторить</Button>\r\n        <Link to=\"/\">\r\n          <Button type=\"success\">Перейти в список тестов</Button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FinishedQuiz","import React, {Component} from 'react'\r\nimport classes from './Quiz.css'\r\nimport ActiveQuiz from '../../components/ActiveQuiz/ActiveQuiz'\r\nimport FinishedQuiz from '../../components/FinishedQuiz/FinishedQuiz'\r\n\r\nclass Quiz extends Component {\r\n  state = {\r\n    results: {}, // {[id]: success error}\r\n    isFinished: false,\r\n    activeQuestion: 0,\r\n    answerState: null, // { [id]: 'success' 'error' }\r\n    quiz: [\r\n      {\r\n        question: 'Какого цвета небо?',\r\n        rightAnswerId: 2,\r\n        id: 1,\r\n        answers: [\r\n          {text: 'Чёрный', id: 1},\r\n          {text: 'Синий', id: 2},\r\n          {text: 'Красный', id: 3},\r\n          {text: 'Зелёный', id: 4}\r\n        ]\r\n      },\r\n      {\r\n        question: 'В каком году основали Санкт-Петербург?',\r\n        rightAnswerId: 3,\r\n        id: 2,\r\n        answers: [\r\n          {text: '1700', id: 1},\r\n          {text: '1702', id: 2},\r\n          {text: '1703', id: 3},\r\n          {text: '1803', id: 4}\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n\r\n  onAnswerClickHandler = answerId => {\r\n    if (this.state.answerState) {\r\n      const key = Object.keys(this.state.answerState)[0]\r\n      if (this.state.answerState[key] === 'success') {\r\n        return\r\n      }\r\n    }\r\n    \r\n    const question = this.state.quiz[this.state.activeQuestion]\r\n    const results = this.state.results\r\n\r\n    if (question.rightAnswerId === answerId) {\r\n      if (!results[question.id]) {\r\n        results[question.id] = 'success'\r\n      }\r\n      \r\n      this.setState({\r\n        answerState: {[answerId]: 'success'},\r\n        results\r\n      })\r\n      \r\n      const timeout = window.setTimeout(() => {\r\n        if (this.isQuizFinished()) {\r\n          this.setState({\r\n            isFinished: true\r\n          })\r\n        } else {\r\n          this.setState({\r\n            activeQuestion: this.state.activeQuestion + 1,\r\n            answerState: null\r\n          })\r\n        }\r\n        window.clearTimeout(timeout)\r\n      }, 1000)\r\n    } else {\r\n      results[question.id] = 'error'\r\n      this.setState({\r\n        answerState: {[answerId]: 'error'},\r\n        results\r\n      })\r\n    }\r\n  }\r\n\r\n  isQuizFinished() {\r\n    return this.state.activeQuestion + 1 === this.state.quiz.length\r\n  }\r\n\r\n  retryHandler = () => {\r\n    this.setState({\r\n      activeQuestion: 0,\r\n      answerState: null,\r\n      isFinished: false,\r\n      results: {}\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={classes.Quiz}>\r\n        <div className={classes.QuizWrapper}>\r\n          <h1>Ответьте на все вопросы</h1>\r\n\r\n          {\r\n            this.state.isFinished \r\n              ? <FinishedQuiz \r\n                  results={this.state.results}\r\n                  quiz={this.state.quiz}\r\n                  onRetry={this.retryHandler}\r\n                />\r\n              : <ActiveQuiz \r\n                  answers={this.state.quiz[this.state.activeQuestion].answers}\r\n                  question={this.state.quiz[this.state.activeQuestion].question}\r\n                  onAnswerClick={this.onAnswerClickHandler}\r\n                  quizLength={this.state.quiz.length}\r\n                  answerNumber={this.state.activeQuestion + 1}\r\n                  state={this.state.answerState}\r\n                />\r\n          }\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default Quiz","import React, {Component} from 'react'\r\nimport classes from './QuizList.css'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nexport default class QuizList extends Component {\r\n\r\n  renderQuizes() {\r\n    return [1, 2, 3].map((quiz, index) => {\r\n      return (\r\n        <li\r\n          key={index}\r\n        >\r\n          <NavLink to={'/quiz/' + quiz}>\r\n            Тест {quiz}\r\n          </NavLink>\r\n        </li>\r\n      )\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={classes.QuizList}>\r\n        <div>\r\n          <h1>Список тестов</h1>\r\n\r\n          <ul>\r\n            { this.renderQuizes() }\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, {Component} from 'react'\r\n\r\nexport default class Auth extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Auth</h1>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, {Component} from 'react'\r\n\r\nexport default class QuizCreator extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Quiz Creator</h1>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport Layout from './hoc/Layout/Layout';\r\nimport {Route, Switch} from 'react-router-dom';\r\nimport Quiz from './containers/Quiz/Quiz';\r\nimport QuizList from './containers/QuizList/QuizList';\r\nimport Auth from './containers/Auth/Auth';\r\nimport QuizCreator from './containers/QuizCreator/QuizCreator';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        <Switch>\r\n          <Route path=\"/auth\" component={Auth} />\r\n          <Route path=\"/quiz-creator\" component={QuizCreator} />\r\n          <Route path=\"/quiz/:id\" component={Quiz} />\r\n          <Route path=\"/\" exact component={QuizList} />\r\n        </Switch>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst app = (\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>\r\n)\r\n\r\nReactDOM.render(app, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}